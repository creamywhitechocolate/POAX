import pygame
import sys
import random

# colours
WHITE = (255,255,255)
BLACK = (0,0,0)
TEAL = (148,216,219)

# number tiles
ZERO = 0
ONE = 1
TWO = 2
THREE = 3
FOUR = 4
FIVE = 5
SIX = 6
SEVEN = 7
EIGHT = 8
NINE = 9

# display dimensions
TILE = 60
WIDTH = 9
HEIGHT = 9
# textures
# load tile images
tile0_img = pygame.image.load('tile0.png')
tile1_img = pygame.image.load('tile1.png')
tile2_img = pygame.image.load('tile2.png')
tile3_img = pygame.image.load('tile3.png')
tile4_img = pygame.image.load('tile4.png')
tile5_img = pygame.image.load('tile5.png')
tile6_img = pygame.image.load('tile6.png')
tile7_img = pygame.image.load('tile7.png')
tile8_img = pygame.image.load('tile8.png')
tile9_img = pygame.image.load('tile9.png')

# assign scaled image to numbers
textures = {
            ZERO : pygame.transform.scale(tile0_img, (TILE,TILE)),
            ONE : pygame.transform.scale(tile1_img, (TILE,TILE)),
            TWO : pygame.transform.scale(tile2_img, (TILE,TILE)),
            THREE : pygame.transform.scale(tile3_img, (TILE,TILE)),
            FOUR : pygame.transform.scale(tile4_img, (TILE,TILE)),
            FIVE : pygame.transform.scale(tile5_img, (TILE,TILE)),
            SIX : pygame.transform.scale(tile6_img, (TILE,TILE)),
            SEVEN : pygame.transform.scale(tile7_img, (TILE,TILE)),
            EIGHT : pygame.transform.scale(tile8_img, (TILE,TILE)),
            NINE : pygame.transform.scale(tile9_img, (TILE,TILE))
          }

# player image
char_img = pygame.image.load('idle1.png')
char = pygame.transform.scale(char_img, (TILE,TILE))
char_pos = [0,0]

# numbers
numbers = [ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE]
tilemap = [[ZERO for w in range(WIDTH)] for h in range(HEIGHT)]

# set window
pygame.init()
DISPLAY = pygame.display.set_mode((WIDTH*TILE,HEIGHT*TILE + 100))

# create tile map
tilemap = [[random.choice(numbers) for w in range(WIDTH)] for h in range(HEIGHT)]

# loop
def loop():
    
    current_tile = '?'
    num1 = '?'
    num2 = '?'
    score = 0
    newquestion = False

    while True:

        # set bg colour    
        DISPLAY.fill(TEAL)

        # quit game
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            # character movement
            if event.type == pygame.KEYDOWN:
                # left key
                if event.key == pygame.K_LEFT and char_pos[0] > 0:
                    char_pos[0] -= 1
                # right key
                elif event.key == pygame.K_RIGHT and char_pos[0] < WIDTH - 1:
                    char_pos[0] += 1
                # up key
                elif event.key == pygame.K_UP and char_pos[1] > 0:
                    char_pos[1] -= 1
                # down key
                elif event.key == pygame.K_DOWN and char_pos[1] < HEIGHT - 1:
                    char_pos[1] += 1
    
                # selecting tile
                # space key pressed
                if event.key == pygame.K_SPACE:
                    # set answer to tile at player's current position
                    current_tile = tilemap[char_pos[1]][char_pos[0]]

                if event.key == pygame.K_q:
                    num1 = random.randint(0,5)
                    num2 = random.randint(0,5)
                    answer = num1 + num2

        for row in range(HEIGHT):
                         for column in range(WIDTH):
                             DISPLAY.blit(textures[tilemap[row][column]],(column*TILE,row*TILE))
    
        DISPLAY.blit(char,(char_pos[0]*TILE, char_pos[1]*TILE))
    
        # print answer
        BARFONT = pygame.font.Font('freesansbold.ttf', 18)
        score = BARFONT.render('Score: ' + str(score), True, WHITE, TEAL)
        DISPLAY.blit(answer, (10, HEIGHT*TILE + 20))

        question = BARFONT.render(str(num1) + ' + ' + str(num2) + '=' + str(current_tile), True, WHITE, TEAL)
        DISPLAY.blit(question,(WIDTH*TILE*0.5, HEIGHT*TILE + 50))
    
        pygame.display.update()

loop() 
    


